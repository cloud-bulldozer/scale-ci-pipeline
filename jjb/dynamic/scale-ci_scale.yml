- job:
    block-downstream: false
    block-upstream: false
    builders:
    - shell: |+
        set -o pipefail
        set -ex

        # get perf keys to access orchestration host and set ssh session options
        git clone --depth=1 https://${SSHKEY_TOKEN}@github.com/redhat-performance/perf-dept.git
        export PUBLIC_KEY=${WORKSPACE}/perf-dept/ssh_keys/id_rsa_pbench_ec2.pub
        export PRIVATE_KEY=${WORKSPACE}/perf-dept/ssh_keys/id_rsa_pbench_ec2
        export OPTIONS="-o StrictHostKeyChecking=no -o ServerAliveInterval=1 -o ConnectionAttempts=100"
        chmod 600 ${PRIVATE_KEY}

        # fetch the kubeconfig from the orchestration host
        echo "Fetching the kubeconfig from the orchestration host"
        scp ${OPTIONS} -i ${PRIVATE_KEY} ${ORCHESTRATION_USER}@${ORCHESTRATION_HOST}:${KUBECONFIG} ${WORKSPACE}/kubeconfig
        export KUBECONFIG=$WORKSPACE/kubeconfig

        # run tests
        pushd workloads/scale-perf/
        ./run_scale_fromgit.sh

    concurrent: true
    description: |
      This job gets the  OpenShift cluster to the desired node count.
      This job is managed by https://github.com/openshift-scale/scale-ci-pipeline
    disabled: false
    name: ATS-SCALE-CI-SCALE
    node: scale-ci
    parameters:
    - string:
        default: ""
        description: The machine intended to run the oc commands and launch the workload.
        name: ORCHESTRATION_HOST
    - string:
        default: "root"
        description: The user for the Orchestration host.
        name: ORCHESTRATION_USER
    - string:
        default: ""
        description: Token to access private repo containing ssh keys.
        name: SSHKEY_TOKEN
    - string:
        default: "/root/.kube/config"
        description: Location(absolute path) of kubeconfig on orchestration host.
        name: KUBECONFIG
    - string:
        default: ""
        description: The target scale of the workers in the cluster. THIS IS A REQUIRED VARIABLE
        name: SCALE
    - string:
        default: "5"
        description: How long (in seconds) to have the scale test wait inbetween ready checks
        name: POLL_INTERVAL
    - string:
        default: "0"
        description: How long to have the system wait after a scale event
        name: POST_SLEEP
    - string:
        default: "240"
        description: Timeout value (in minutes) for each scale event
        name: TIMEOUT
    - string:
        default: "1"
        description: How many times to run the scale up. It will scale down to the original size before running the next itteration
        name: RUNS
    - string:
        default: ""
        description: The elasticsearch server where the data will be indexed.
        name: ES_SERVER
    - bool:
        default: false
        description: Enable/Disable the ability to compare two runs. If set to true, the next set of environment variables pertaining to the type of test are
        name: COMPARE
    - string:
        default: ""
        description: Name you would like to give your baseline cloud. It will appear as a header in the CSV file
        name: BASELINE_CLOUD_NAME
    - string:
        default: ""
        description: Baseline UUID
        name: BASELINE_UUID
    - string:
        default: ""
        description: Elasticsearch server used used by the baseline run
        name: ES_SERVER_BASELINE
    - string:
        default: ""
        description: URL to check the status of the cluster using cerberus
        name: CERBERUS_URL
    - bool:
        default: false
        description: Enables/Disables metadata collection
        name: METADATA_COLLECTION
    - string:
        default: ''
        description: ''
        name: JENKINS_USER
        trim: 'false'
    - string:
        default: ''
        description: ''
        name: JENKINS_API_TOKEN
        trim: 'false'
    - string:
        default: ''
        description: ''
        name: JENKINS_ES_SERVER
        trim: 'false'
    project-type: freestyle
    properties:
    - raw:
        xml: |
          <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28" />
    - raw:
        xml: |
          <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.3">
          <gitLabConnection />
          </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    - raw:
        xml: |
          <org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty plugin="zmq-event-publisher@0.0.5">
          <enabled>false</enabled>
          </org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty>
    - raw:
        xml: |
          <com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty plugin="ownership@0.11.0">
          <ownership>
          <ownershipEnabled>true</ownershipEnabled>
          <primaryOwnerId>nelluri</primaryOwnerId>
          <coownersIds class="sorted-set" />
          </ownership>
          </com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty>
    - raw:
        xml: |
          <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
          <autoRebuild>false</autoRebuild>
          <rebuildDisabled>false</rebuildDisabled>
          </com.sonyericsson.rebuild.RebuildSettings>
    - raw:
        xml: |
          <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
          <maxConcurrentPerNode>0</maxConcurrentPerNode>
          <maxConcurrentTotal>0</maxConcurrentTotal>
          <categories class="java.util.concurrent.CopyOnWriteArrayList" />
          <throttleEnabled>false</throttleEnabled>
          <throttleOption>project</throttleOption>
          <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
          <paramsToUseForLimit />
          </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    publishers:
    - raw:
        xml: |
          <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
          <configs>
          <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
          <hudson.plugins.parameterizedtrigger.NodeParameters />
          <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          <properties>SSHKEY_TOKEN=${SSHKEY_TOKEN}
          ORCHESTRATION_HOST=${ORCHESTRATION_HOST}
          ORCHESTRATION_USER=${ORCHESTRATION_USER}
          JENKINS_BUILD_TAG=${BUILD_TAG}
          JENKINS_NODE_NAME=${NODE_NAME}
          JENKINS_BUILD_URL=${BUILD_URL}
          ES_SERVER=${JENKINS_ES_SERVER}
          JENKINS_USER=${JENKINS_USER}
          JENKINS_API_TOKEN=${JENKINS_API_TOKEN}</properties>
          <textParamValueOnNewLine>false</textParamValueOnNewLine>
          </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>INDEXER, </projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
          </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          </configs>
          </hudson.plugins.parameterizedtrigger.BuildTrigger>
    scm:
    - git:
        branches:
        - '*/master'
        url: https://github.com/cloud-bulldozer/e2e-benchmarking.git
    triggers: []
    wrappers:
    - workspace-cleanup:
        dirmatch: false
    - ansicolor:
        colormap: xterm
