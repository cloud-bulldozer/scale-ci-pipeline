- job:
    block-downstream: false
    block-upstream: false
    builders:
    - shell: |+
        set -e

        if [[ ! -d "${WORKSPACE}/perf-dept" ]]; then
        git clone https://${GITHUB_TOKEN}@github.com/redhat-performance/perf-dept.git
        fi
        export PRIVATE_KEY=${WORKSPACE}/perf-dept/ssh_keys/id_rsa_pbench_ec2
        chmod 600 ${PRIVATE_KEY}
        export OPTIONS="-o StrictHostKeyChecking=no -o ServerAliveInterval=1 -o ConnectionAttempts=100"
        export KUBECONFIG="/root/.kube/config"


        if [[ "${USE_PROXY}" == "true" ]]; then
        ssh ${OPTIONS} -o ProxyCommand="ssh -i ${PRIVATE_KEY} -W %h:%p ${PROXY_USER}@${PROXY_HOST}" -i ${PRIVATE_KEY} ${USER}@${JUMP_HOST} 'bash -s' <<ENDSSH
        sudo su -
        set -e
        oc login -u system:admin
        if [[ -d "/root/scale-cd-jobs" ]]; then
        rm -rf /root/scale-cd-jobs
        fi
        git clone https://github.com/chaitanyaenr/scale-cd-jobs.git /root/scale-cd-jobs
        cd /root/scale-cd-jobs/build-scripts
        ./cluster_limits_ns.sh.python $SETUP_PBENCH $CONTAINERIZED $CLEAR_RESULTS $MOVE_RESULTS $TOOLING_INVENTORY $FIRST_RUN_PROJECTS $SECOND_RUN_PROJECTS $THIRD_RUN_PROJECTS $MODE
        exit
        ENDSSH
        else
        ssh ${OPTIONS} -i ${PRIVATE_KEY} ${USER}@${JUMP_HOST} 'bash -s'<<ENDSSH
        set -e
        if [[ -d "/root/scale-cd-jobs" ]]; then
        rm -rf /root/scale-cd-jobs
        fi
        git clone https://github.com/chaitanyaenr/scale-cd-jobs.git /root/scale-cd-jobs
        cd /root/scale-cd-jobs/build-scripts
        if [[ $CONTAINERIZED == "true" ]]; then
        ./controller.sh
        else
        ./cluster_limits_ns.sh.python $SETUP_PBENCH $CONTAINERIZED $CLEAR_RESULTS $MOVE_RESULTS $TOOLING_INVENTORY $FIRST_RUN_PROJECTS $SECOND_RUN_PROJECTS $THIRD_RUN_PROJECTS $MODE
        fi
        exit
        ENDSSH
        fi

    concurrent: false
    description: Cluster limits test which creates max namespaces possible on a openshift
      cluster.
    disabled: false
    name: NS_PER_CLUSTER
    node: cucushift&&oc41
    parameters:
    - string:
        default: ''
        description: this is a var to help idenfity cluster loaders results.
        name: SNAFU_USER
    - string:
        default: ''
        description: cluster name is a var to help idenfity cluster loaders results.(defaults to clustername found in machinset label)
        name: SNAFU_CLUSTER_NAME
    - string:
        default: ''
        description: Elasticsearch server host address (currently used by snafu), set to index results from cluster loader
        name: ES_HOST
    - string:
        default: ''
        description: Elasticsearch server index prefix (currently used by snafu) (defaults to snafu through the workloads repo)
        name: ES_INDEX_PREFIX
    - string:
        default: ansible-host
        description: "The jump host needs to have the inventory used to install openshift\
          \ and kube config.\t\t\t\t\t\t "
        name: JUMP_HOST
    - string:
        default: root
        description: The user to use when sshing to the JUMP_HOST.
        name: USER
    - bool:
        default: true
        description: Use the ProxyCommand to access the OpenShift masters, jump host
          on private networks in the lab.
        name: USE_PROXY
    - string:
        default: ''
        description: The name to use in the ssh ProxyCommand.
        name: PROXY_USER
    - string:
        default: ''
        description: The server to use in the ssh ProxyCommand.
        name: PROXY_HOST
    - bool:
        default: false
        description: When enabled will register tools using pbench-ansible
        name: SETUP_PBENCH
    - string:
        default: ''
        description: path to the inventory generated by openshift_labeler.
        name: TOOLING_INVENTORY
    - bool:
        default: false
        description: When set to true will clear the pbench results, make sure the
          results are saved before enabling this option.
        name: CLEAR_RESULTS
    - bool:
        default: true
        description: when enabled will move the results to the server.
        name: MOVE_RESULTS
    - bool:
        default: false
        description: when enabled will run containerized pbench.
        name: CONTAINERIZED
    - string:
        default: '1000'
        description: ''
        name: FIRST_RUN_PROJECTS
    - string:
        default: '2000'
        description: ''
        name: SECOND_RUN_PROJECTS
    - string:
        default: '2000'
        description: ''
        name: THIRD_RUN_PROJECTS
    - string:
        default: ''
        description: ''
        name: GITHUB_TOKEN
    - string:
        default: ''
        description: CI or FULL
        name: MODE
    project-type: freestyle
    properties:
    - raw:
        xml: |
          <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28" />
    - raw:
        xml: |
          <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.3">
          <gitLabConnection />
          </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    - raw:
        xml: |
          <org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty plugin="zmq-event-publisher@0.0.5">
          <enabled>false</enabled>
          </org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty>
    - raw:
        xml: |
          <com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty plugin="ownership@0.11.0">
          <ownership>
          <ownershipEnabled>true</ownershipEnabled>
          <primaryOwnerId>nelluri</primaryOwnerId>
          <coownersIds class="sorted-set" />
          </ownership>
          </com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty>
    - raw:
        xml: |
          <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
          <autoRebuild>false</autoRebuild>
          <rebuildDisabled>false</rebuildDisabled>
          </com.sonyericsson.rebuild.RebuildSettings>
    - raw:
        xml: |
          <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
          <maxConcurrentPerNode>0</maxConcurrentPerNode>
          <maxConcurrentTotal>0</maxConcurrentTotal>
          <categories class="java.util.concurrent.CopyOnWriteArrayList" />
          <throttleEnabled>false</throttleEnabled>
          <throttleOption>project</throttleOption>
          <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
          <paramsToUseForLimit />
          </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    publishers: []
    triggers: []
    wrappers:
    - ansicolor:
        colormap: xterm
