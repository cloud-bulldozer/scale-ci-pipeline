- job:
    block-downstream: false
    block-upstream: false
    builders:
    - shell: |-
        set -o pipefail
        set -eux

        # get perf keys to access orchestration host and set ssh session options
        git clone https://${SSHKEY_TOKEN}@github.com/redhat-performance/perf-dept.git
        export PUBLIC_KEY=${WORKSPACE}/perf-dept/ssh_keys/id_rsa_pbench_ec2.pub
        export PRIVATE_KEY=${WORKSPACE}/perf-dept/ssh_keys/id_rsa_pbench_ec2
        export OPTIONS="-o StrictHostKeyChecking=no -o ServerAliveInterval=1 -o ConnectionAttempts=100"
        chmod 600 ${PRIVATE_KEY}

        # fetch the kubeconfig from the orchestration host
        echo "Fetching the  kubeconfig from the orchestration host"
        scp ${OPTIONS} -i ${PRIVATE_KEY} ${ORCHESTRATION_USER}@${ORCHESTRATION_HOST}:${KUBECONFIG_FILE} ${WORKSPACE}/kubeconfig
        export KUBECONFIG=${WORKSPACE}/kubeconfig

        # delete benchmark status file if exists and set the path
        rm /tmp/uperf_$BUILD_NUMBER.status || true
        export BENCHMARK_STATUS_PATH=/tmp/uperf_$BUILD_NUMBER.status
        echo "BENCHMARK_STATUS_FILE=$BENCHMARK_STATUS_PATH" > uperf.properties

        # run tests
        pushd workloads/network-perf/
        if [[ ${SMOKE_TEST} == "true" ]] ; then
          ./smoke_test.sh test_cloud $KUBECONFIG
        fi
        if [[ ${HOSTNETWORK_TEST} == "true" ]] ; then
          ./run_hostnetwork_network_test_fromgit.sh test_cloud $KUBECONFIG
          hostnetwork_test_status=$(oc get benchmarks/uperf-benchmark-hostnetwork  -n my-ripsaw -o jsonpath='{.status.state}')
          echo "hostnetwork_test=$hostnetwork_test_status" >> /tmp/uperf_$BUILD_NUMBER.status
        fi
        if [[ ${POD_TEST} == "true" ]] ; then
          ./run_pod_network_test_fromgit.sh test_cloud $KUBECONFIG
          podnetwork_test_status=$(oc get benchmarks/uperf-benchmark-pod-network  -n my-ripsaw -o jsonpath='{.status.state}')
          echo "podnetwork_test=$hostnetwork_test_status" >> /tmp/uperf_$BUILD_NUMBER.status
        fi
        if [[ ${SERVICE_TEST} == "true" ]] ; then
          ./run_serviceip_network_test_fromgit.sh test_cloud $KUBECONFIG
          servicenetwork_test_status=$(oc get benchmarks/uperf-benchmark-service-network  -n my-ripsaw -o jsonpath='{.status.state}')
          echo "servicenetwork_test=$servicenetwork_test_status" >> /tmp/uperf_$BUILD_NUMBER.status
        fi
    concurrent: true
    description: |-
      Uperf is a network performance tool
      This job is managed by https://github.com/cloud-bulldozer/plow.git
      <!-- Managed by Jenkins Job Builder -->
    disabled: false
    name: RIPSAW-UPERF
    node: scale-ci
    parameters:
    - string:
        default: root
        description: User name to access cluster.
        name: ORCHESTRATION_USER
        trim: 'false'
    - string:
        default: ''
        description: Host with the kubeconfig and oc client.
        name: ORCHESTRATION_HOST
        trim: 'false'
    - string:
        default: "~/.kube/config"
        description: Location(absolute path) of kubeconfig on orchestration host.
        name: KUBECONFIG_FILE
    - string:
        default: ""
        description: Username for elasticsearch instance
        name: ES_USER
    - string:
        default: ""
        description: Password for elasticsearch instance
        name: ES_PASSWORD
    - raw:
        xml: |
          <hudson.model.PasswordParameterDefinition>
          <name>SSHKEY_TOKEN</name>
          <description>Token to access private repo containing ssh keys.</description>
          <defaultValue></defaultValue>
          </hudson.model.PasswordParameterDefinition>
    - string:
        default: ''
        description: The elasticsearch server where the data will be indexed.
        name: ES_SERVER
        trim: 'false'
    - string:
        default: ''
        description: The port for the elasticsearch server.
        name: ES_PORT
        trim: 'false'
    - bool:
        default: true
        description: Enable/Disable the ability to compare two uperf runs. If set to true, the next set of environment variables pertaining to the type of test are
        name: COMPARE
    - string:
        default: ""
        description: Username for elasticsearch instance
        name: ES_USER_BASELINE
    - string:
        default: ""
        description: Password for elasticsearch instance
        name: ES_PASSWORD_BASELINE
    - string:
        default: ""
        description: Name you would like to give your baseline cloud. It will appear as a header in the CSV file
        name: BASELINE_CLOUD_NAME
    - string:
        default: ""
        description: Elasticsearch server used used by the baseline run
        name: ES_SERVER_BASELINE
    - string:
        default: ""
        description: Port number for the elasticsearch server used by the baseline run
        name: ES_PORT_BASELINE
    - bool:
        default: true
        description: Enables/Disables metadata collection
        name: METADATA_COLLECTION
    - string:
        default: ""
        description: Baseline UUID for hostnetwork test
        name: BASELINE_HOSTNET_UUID
    - string:
        default: ""
        description: Baseline UUID for pod to pod using SDN test with 1 uperf client-server pair
        name: BASELINE_POD_1P_UUID
    - string:
        default: ""
        description: Baseline UUID for pod to pod using SDN test with 2 uperf client-server pair
        name: BASELINE_POD_2P_UUID
    - string:
        default: ""
        description: Baseline UUID for pod to pod using SDN test with 4 uperf client-server pair
        name: BASELINE_POD_4P_UUID
    - string:
        default: ""
        description: Baseline UUID for pod to pod using service test with 1 uperf client-server pair
        name: BASELINE_SVC_1P_UUID
    - string:
        default: ""
        description: Baseline UUID for pod to pod using service test with 2 uperf client-server pair
        name: BASELINE_SVC_2P_UUID
    - string:
        default: ""
        description: Baseline UUID for pod to pod using service test with 4 uperf client-server pair
        name: BASELINE_SVC_4P_UUID
    - string:
        default: ""
        description: BASELINE_MULTUS_UUID
        name: Baseline UUID for multus test
    - string:
        default: ""
        description: Accepeted deviation in percentage for throughput when compared to a baseline run
        name: THROUGHPUT_TOLERANCE
    - string:
        default: ""
        description: Accepeted deviation in percentage for latency when compared to a baseline run
        name: LATENCY_TOLERANCE
    - string:
        default: ""
        description: URL to check the status of the cluster using cerberus
        name: CERBERUS_URL
    - string:
        default: ""
        description: For this you will have to place Google Service Account Key in the $GSHEET_KEY_LOCATION. It will push your local results CSV to Google Spreadsheets and send an email with the attachment
        name: EMAIL_ID_FOR_RESULTS_SHEET
    - string:
        default: ""
        description: The ES server that houses gold-index. Format `user:pass@<es_server>:<es_port>
        name: ES_GOLD
    - string:
        default: ""
        description: The openshift version you want to compare the current run to
        name: GOLD_OCP_VERSION
    - string:
        default: "openshiftsdn"
        description: Compares the current run with gold-index with the sdn type of GOLD_SDN. Options are openshiftsdn and ovnkubernetes
        name: GOLD_SDN
    - bool:
        default: true
        description: If COMPARE is set to true and COMPARE_WITH_GOLD is set to true then the current run will be compared against our gold-index
        name: COMPARE_WITH_GOLD
    - string:
        default: ''
        description: The UUID used as a reference/baseline to determine pass/fail criteria
        name: BASELINE_UPERF_UUID
        trim: 'false'
    - bool:
        default: true
        description: Enables/Disables hostnetwork_test
        name: HOSTNETWORK_TEST
    - bool:
        default: true
        description: Enables/Disables pod to pod via sdn test
        name: POD_TEST
    - bool:
        default: true
        description: Enables/Disables pod to pod via service test
        name: SERVICE_TEST
    - bool:
        default: true
        description: Enables/Disables a smoke test which uses pod via sdn test
        name: SMOKE_TEST
    - string:
        default: ''
        description: URL to check the status of the cluster using cerberus
        name: CERBERUS_URL
        trim: 'false'
    - string:
        default: ''
        description: ''
        name: JENKINS_USER
        trim: 'false'
    - string:
        default: ''
        description: ''
        name: JENKINS_API_TOKEN
        trim: 'false'
    - string:
        default: ''
        description: ''
        name: JENKINS_ES_SERVER
        trim: 'false'
    project-type: freestyle
    properties:
    - raw:
        xml: |
          <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.1" />
    - raw:
        xml: |
          <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.12">
          <gitLabConnection />
          </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    - raw:
        xml: |
          <com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty plugin="ownership@0.12.1">
          <ownership>
          <ownershipEnabled>true</ownershipEnabled>
          <primaryOwnerId>nelluri</primaryOwnerId>
          <coownersIds class="sorted-set" />
          </ownership>
          </com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty>
    - raw:
        xml: |
          <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
          <autoRebuild>false</autoRebuild>
          <rebuildDisabled>false</rebuildDisabled>
          </com.sonyericsson.rebuild.RebuildSettings>
    - raw:
        xml: |
          <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
          <maxConcurrentPerNode>0</maxConcurrentPerNode>
          <maxConcurrentTotal>0</maxConcurrentTotal>
          <categories class="java.util.concurrent.CopyOnWriteArrayList" />
          <throttleEnabled>false</throttleEnabled>
          <throttleOption>project</throttleOption>
          <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
          <paramsToUseForLimit />
          </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    publishers:
    - raw:
        xml: |
          <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
          <configs>
          <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
          <hudson.plugins.parameterizedtrigger.NodeParameters />
          <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          <properties>SSHKEY_TOKEN=${SSHKEY_TOKEN}
          ORCHESTRATION_HOST=${ORCHESTRATION_HOST}
          ORCHESTRATION_USER=${ORCHESTRATION_USER}
          JENKINS_BUILD_TAG=${BUILD_TAG}
          JENKINS_NODE_NAME=${NODE_NAME}
          JENKINS_BUILD_URL=${BUILD_URL}
          ES_SERVER=${JENKINS_ES_SERVER}
          JENKINS_USER=${JENKINS_USER}
          JENKINS_API_TOKEN=${JENKINS_API_TOKEN}</properties>
          <textParamValueOnNewLine>false</textParamValueOnNewLine>
          </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          <hudson.plugins.parameterizedtrigger.FileBuildParameters>
          <propertiesFile>uperf.properties</propertiesFile>
          <failTriggerOnMissing>false</failTriggerOnMissing>
          <textParamValueOnNewLine>false</textParamValueOnNewLine>
          <useMatrixChild>false</useMatrixChild>
          <onlyExactRuns>false</onlyExactRuns>
          </hudson.plugins.parameterizedtrigger.FileBuildParameters>
          </configs>
          <projects>INDEXER, </projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
          </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          </configs>
          </hudson.plugins.parameterizedtrigger.BuildTrigger>

    scm:
    - git:
        branches:
        - '*/master'
        name: origin
        refspec: +refs/heads/*:refs/remotes/origin/*
        url: https://github.com/cloud-bulldozer/plow.git
        wipe-workspace: true
    triggers: []
    wrappers:
    - raw:
        xml: |
          <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.37">
          <deleteDirs>false</deleteDirs>
          <cleanupParameter />
          <externalDelete />
          <disableDeferredWipeout>false</disableDeferredWipeout>
          </hudson.plugins.ws__cleanup.PreBuildCleanup>
    - ansicolor:
        colormap: xterm
